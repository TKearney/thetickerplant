/q tick/r.q [host]:port[:usr:pwd] [host]:port[:usr:pwd]
/2008.09.09 .k ->.q

if[not "w"=first string .z.o;system "sleep 1"];

//Websocket handles list
wsHandles:`int$();
.z.wo:{wsHandles::distinct wsHandles,.z.w;`connectionLog insert (.z.n;.z.u;"." sv string "i"$0x0 vs .z.a;.z.w;0Nn)};
.z.wc:{wsHandles::wsHandles inter key .z.W;update timeClosed:.z.n from `connectionLog where null timeClosed,handle=.z.w};
epochMillis:{floor((`long$.z.d+x)-`long$1970.01.01D00:00)%1e6};
.z.ws:{neg[.z.w].j.j @[value;x;{`$x}];};
getData:{factor:500;0!update epochMillis time from ?[neg[x] sublist metrics;();(enlist`time)!enlist($;"t";(xbar;(ceiling;(%;`x;`factor));`time.second));((cols[metrics]except`sym`time)!{(avg;x)}each cols[metrics]except`sym`time)]};

//\cd ../hdb/;
upd:{x insert y;{neg[x] .j.j update epochMillis time from -1 sublist metrics}each wsHandles};

/ get the ticker plant and history ports, defaults are 5010,5012
.u.x:.z.x,(count .z.x)_(":5010";":5012");

/ end of day: save, clear, hdb reload
.u.end:{t:tables`.;t@:where `g=attr each t@\:`sym;.Q.hdpf[`$":",.u.x 1;`:.;x;`sym];@[;`sym;`g#] each t;};

/ init schema and sync up from log file;cd to hdb(so client save can run)
.u.rep:{(.[;();:;].)each x;if[null first y;:()];-11!y;system "cd ",1_-10_string first reverse y};
/ HARDCODE \cd if other than logdir/db

/ connect to ticker plant for (schema;(logcount;log))
/(hopen `$":",.u.x 0)"(.u.sub[`;`];`.u `i`L)";
.u.rep .(hopen `$":",.u.x 0)"(.u.sub[`;`];`.u `i`L)";
/h:hopen `$":",.u.x 0;
/h:hopen 
/h(`.u.sub;[`;`]);


